// Code generated by protoc-gen-go. DO NOT EDIT.
// source: poki.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	poki.proto

It has these top-level messages:
	Path
	Post
	Rev
	PostRev
	CreateResponse
	ReadResponse
	UpdateResponse
	DeleteResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Path struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
}

func (m *Path) Reset()                    { *m = Path{} }
func (m *Path) String() string            { return proto1.CompactTextString(m) }
func (*Path) ProtoMessage()               {}
func (*Path) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Path) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type Post struct {
	Path *Path          `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Raw  []byte         `protobuf:"bytes,2,opt,name=raw,proto3" json:"raw,omitempty"`
	Meta *Post_MetaData `protobuf:"bytes,3,opt,name=meta" json:"meta,omitempty"`
}

func (m *Post) Reset()                    { *m = Post{} }
func (m *Post) String() string            { return proto1.CompactTextString(m) }
func (*Post) ProtoMessage()               {}
func (*Post) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Post) GetPath() *Path {
	if m != nil {
		return m.Path
	}
	return nil
}

func (m *Post) GetRaw() []byte {
	if m != nil {
		return m.Raw
	}
	return nil
}

func (m *Post) GetMeta() *Post_MetaData {
	if m != nil {
		return m.Meta
	}
	return nil
}

type Post_MetaData struct {
	Updated *google_protobuf.Timestamp `protobuf:"bytes,1,opt,name=updated" json:"updated,omitempty"`
	Title   string                     `protobuf:"bytes,2,opt,name=Title" json:"Title,omitempty"`
}

func (m *Post_MetaData) Reset()                    { *m = Post_MetaData{} }
func (m *Post_MetaData) String() string            { return proto1.CompactTextString(m) }
func (*Post_MetaData) ProtoMessage()               {}
func (*Post_MetaData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1, 0} }

func (m *Post_MetaData) GetUpdated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *Post_MetaData) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type Rev struct {
	RevisionID string `protobuf:"bytes,1,opt,name=revisionID" json:"revisionID,omitempty"`
}

func (m *Rev) Reset()                    { *m = Rev{} }
func (m *Rev) String() string            { return proto1.CompactTextString(m) }
func (*Rev) ProtoMessage()               {}
func (*Rev) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Rev) GetRevisionID() string {
	if m != nil {
		return m.RevisionID
	}
	return ""
}

type PostRev struct {
	Rev  *Rev  `protobuf:"bytes,1,opt,name=rev" json:"rev,omitempty"`
	Post *Post `protobuf:"bytes,2,opt,name=post" json:"post,omitempty"`
}

func (m *PostRev) Reset()                    { *m = PostRev{} }
func (m *PostRev) String() string            { return proto1.CompactTextString(m) }
func (*PostRev) ProtoMessage()               {}
func (*PostRev) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PostRev) GetRev() *Rev {
	if m != nil {
		return m.Rev
	}
	return nil
}

func (m *PostRev) GetPost() *Post {
	if m != nil {
		return m.Post
	}
	return nil
}

type CreateResponse struct {
	Rev *Rev `protobuf:"bytes,1,opt,name=rev" json:"rev,omitempty"`
}

func (m *CreateResponse) Reset()                    { *m = CreateResponse{} }
func (m *CreateResponse) String() string            { return proto1.CompactTextString(m) }
func (*CreateResponse) ProtoMessage()               {}
func (*CreateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *CreateResponse) GetRev() *Rev {
	if m != nil {
		return m.Rev
	}
	return nil
}

type ReadResponse struct {
	PostRev *PostRev `protobuf:"bytes,1,opt,name=post_rev,json=postRev" json:"post_rev,omitempty"`
}

func (m *ReadResponse) Reset()                    { *m = ReadResponse{} }
func (m *ReadResponse) String() string            { return proto1.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()               {}
func (*ReadResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadResponse) GetPostRev() *PostRev {
	if m != nil {
		return m.PostRev
	}
	return nil
}

type UpdateResponse struct {
	Rev *Rev `protobuf:"bytes,1,opt,name=rev" json:"rev,omitempty"`
}

func (m *UpdateResponse) Reset()                    { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string            { return proto1.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()               {}
func (*UpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateResponse) GetRev() *Rev {
	if m != nil {
		return m.Rev
	}
	return nil
}

type DeleteResponse struct {
}

func (m *DeleteResponse) Reset()                    { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string            { return proto1.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()               {}
func (*DeleteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func init() {
	proto1.RegisterType((*Path)(nil), "pokstad.poki.Path")
	proto1.RegisterType((*Post)(nil), "pokstad.poki.Post")
	proto1.RegisterType((*Post_MetaData)(nil), "pokstad.poki.Post.MetaData")
	proto1.RegisterType((*Rev)(nil), "pokstad.poki.Rev")
	proto1.RegisterType((*PostRev)(nil), "pokstad.poki.PostRev")
	proto1.RegisterType((*CreateResponse)(nil), "pokstad.poki.CreateResponse")
	proto1.RegisterType((*ReadResponse)(nil), "pokstad.poki.ReadResponse")
	proto1.RegisterType((*UpdateResponse)(nil), "pokstad.poki.UpdateResponse")
	proto1.RegisterType((*DeleteResponse)(nil), "pokstad.poki.DeleteResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Poki service

type PokiClient interface {
	Create(ctx context.Context, in *Post, opts ...grpc.CallOption) (*CreateResponse, error)
	Read(ctx context.Context, in *Path, opts ...grpc.CallOption) (*ReadResponse, error)
	Update(ctx context.Context, in *PostRev, opts ...grpc.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *Rev, opts ...grpc.CallOption) (*DeleteResponse, error)
}

type pokiClient struct {
	cc *grpc.ClientConn
}

func NewPokiClient(cc *grpc.ClientConn) PokiClient {
	return &pokiClient{cc}
}

func (c *pokiClient) Create(ctx context.Context, in *Post, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := grpc.Invoke(ctx, "/pokstad.poki.Poki/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pokiClient) Read(ctx context.Context, in *Path, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := grpc.Invoke(ctx, "/pokstad.poki.Poki/Read", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pokiClient) Update(ctx context.Context, in *PostRev, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := grpc.Invoke(ctx, "/pokstad.poki.Poki/Update", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pokiClient) Delete(ctx context.Context, in *Rev, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := grpc.Invoke(ctx, "/pokstad.poki.Poki/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Poki service

type PokiServer interface {
	Create(context.Context, *Post) (*CreateResponse, error)
	Read(context.Context, *Path) (*ReadResponse, error)
	Update(context.Context, *PostRev) (*UpdateResponse, error)
	Delete(context.Context, *Rev) (*DeleteResponse, error)
}

func RegisterPokiServer(s *grpc.Server, srv PokiServer) {
	s.RegisterService(&_Poki_serviceDesc, srv)
}

func _Poki_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Post)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokiServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pokstad.poki.Poki/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokiServer).Create(ctx, req.(*Post))
	}
	return interceptor(ctx, in, info, handler)
}

func _Poki_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Path)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokiServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pokstad.poki.Poki/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokiServer).Read(ctx, req.(*Path))
	}
	return interceptor(ctx, in, info, handler)
}

func _Poki_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PostRev)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokiServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pokstad.poki.Poki/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokiServer).Update(ctx, req.(*PostRev))
	}
	return interceptor(ctx, in, info, handler)
}

func _Poki_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Rev)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokiServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pokstad.poki.Poki/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokiServer).Delete(ctx, req.(*Rev))
	}
	return interceptor(ctx, in, info, handler)
}

var _Poki_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pokstad.poki.Poki",
	HandlerType: (*PokiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Poki_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _Poki_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Poki_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Poki_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "poki.proto",
}

func init() { proto1.RegisterFile("poki.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 480 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x55, 0x12, 0xe3, 0xb4, 0x93, 0xa8, 0x6a, 0x47, 0x20, 0x45, 0xa6, 0xd0, 0xca, 0x08, 0x54,
	0xf5, 0xb0, 0x46, 0x05, 0x2e, 0x9c, 0x10, 0xe4, 0x82, 0x04, 0x52, 0xb4, 0x0a, 0x3d, 0x70, 0x41,
	0x5b, 0x32, 0x24, 0xab, 0x24, 0x5e, 0xcb, 0x9e, 0x98, 0x43, 0xc5, 0x85, 0x5f, 0xe0, 0xab, 0xb8,
	0x70, 0xe1, 0x17, 0xf8, 0x10, 0xb4, 0xbb, 0x76, 0x13, 0xa7, 0x39, 0xc0, 0x25, 0xbb, 0x99, 0x99,
	0xf7, 0xe6, 0xbd, 0xa7, 0x35, 0x40, 0x66, 0xe6, 0x5a, 0x64, 0xb9, 0x61, 0x83, 0xfd, 0xcc, 0xcc,
	0x0b, 0x56, 0x13, 0x61, 0x6b, 0xd1, 0xc9, 0xd4, 0x98, 0xe9, 0x82, 0x12, 0xd7, 0xbb, 0x5a, 0x7d,
	0x49, 0x58, 0x2f, 0xa9, 0x60, 0xb5, 0xcc, 0xfc, 0x78, 0x74, 0x5c, 0x0d, 0xa8, 0x4c, 0x27, 0x2a,
	0x4d, 0x0d, 0x2b, 0xd6, 0x26, 0x2d, 0x7c, 0x37, 0x8e, 0x20, 0x18, 0x29, 0x9e, 0x21, 0x42, 0x90,
	0x29, 0x9e, 0x0d, 0x5a, 0xa7, 0xad, 0xb3, 0x7d, 0xe9, 0xee, 0xf1, 0xcf, 0x16, 0x04, 0x23, 0x53,
	0x30, 0x3e, 0xd9, 0x68, 0xf6, 0x2e, 0x50, 0x6c, 0x0a, 0x10, 0x16, 0xee, 0x01, 0x78, 0x08, 0x9d,
	0x5c, 0x7d, 0x1d, 0xb4, 0x4f, 0x5b, 0x67, 0x7d, 0x69, 0xaf, 0x98, 0x40, 0xb0, 0x24, 0x56, 0x83,
	0x8e, 0x43, 0xde, 0xdf, 0x42, 0x9a, 0x82, 0xc5, 0x7b, 0x62, 0x35, 0x54, 0xac, 0xa4, 0x1b, 0x8c,
	0x2e, 0x61, 0xaf, 0xae, 0xe0, 0x73, 0xe8, 0xae, 0xb2, 0x89, 0x62, 0x9a, 0x54, 0x9b, 0x23, 0xe1,
	0xbd, 0x88, 0xda, 0xac, 0x18, 0xd7, 0x66, 0x65, 0x3d, 0x8a, 0x77, 0xe1, 0xce, 0x58, 0xf3, 0x82,
	0x9c, 0x8c, 0x7d, 0xe9, 0xff, 0xc4, 0x8f, 0xa1, 0x23, 0xa9, 0xc4, 0x87, 0x00, 0x39, 0x95, 0xba,
	0xd0, 0x26, 0x7d, 0x3b, 0xac, 0xcc, 0x6e, 0x54, 0xe2, 0x4b, 0xe8, 0x5a, 0x55, 0x76, 0xf4, 0x11,
	0x74, 0x72, 0x2a, 0xab, 0xcd, 0x47, 0x4d, 0xe5, 0x92, 0x4a, 0x69, 0xbb, 0x2e, 0x19, 0x53, 0xb0,
	0xdb, 0x75, 0x3b, 0x19, 0xcb, 0xe4, 0xfa, 0xf1, 0x0b, 0x38, 0x78, 0x93, 0x93, 0x62, 0x92, 0x54,
	0x64, 0x26, 0x2d, 0xe8, 0x9f, 0xe8, 0xe3, 0x57, 0xd0, 0x97, 0xa4, 0x26, 0x37, 0xa0, 0xa7, 0xb0,
	0x67, 0xe9, 0x3e, 0xad, 0x91, 0xf7, 0x76, 0xac, 0xa4, 0x52, 0x76, 0x33, 0x7f, 0xb1, 0x8b, 0x3f,
	0xb8, 0x60, 0xfe, 0x6f, 0xf1, 0x21, 0x1c, 0x0c, 0x69, 0x41, 0x6b, 0xd8, 0xc5, 0xaf, 0xb6, 0x7d,
	0x0c, 0x73, 0x8d, 0x63, 0x08, 0xbd, 0x15, 0xdc, 0x61, 0x37, 0x3a, 0x6e, 0xd6, 0x9a, 0xa6, 0xe3,
	0xc1, 0xf7, 0xdf, 0x7f, 0x7e, 0xb4, 0x31, 0xee, 0x5d, 0xdb, 0xf7, 0x22, 0xec, 0xcf, 0xb7, 0x97,
	0x2e, 0xc8, 0x11, 0x04, 0xd6, 0x29, 0xee, 0x78, 0x5c, 0x51, 0xb4, 0x2d, 0x72, 0x9d, 0x48, 0xcd,
	0x88, 0xe1, 0xb5, 0x27, 0xbb, 0xc9, 0x07, 0x47, 0x10, 0x7a, 0xe7, 0xb8, 0x3b, 0xa3, 0x6d, 0xa9,
	0xcd, 0x98, 0xe2, 0x23, 0x47, 0xdc, 0x8b, 0x6a, 0xe2, 0xd6, 0x39, 0xbe, 0x83, 0xd0, 0x87, 0x82,
	0xb7, 0x63, 0xdb, 0x66, 0x6b, 0xa6, 0x57, 0xb3, 0x9d, 0xaf, 0xd9, 0x5e, 0x9f, 0x7c, 0x7c, 0x30,
	0xd5, 0x3c, 0x5b, 0x5d, 0x89, 0xcf, 0x66, 0x99, 0x54, 0x60, 0x7b, 0xea, 0xea, 0x5b, 0x0e, 0xdd,
	0xf1, 0xec, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7f, 0x45, 0xfa, 0x98, 0xfc, 0x03, 0x00, 0x00,
}
